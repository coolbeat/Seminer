*****************************************
* DroidKaigi2017_2.txt
*****************************************
その前に　去年の資料がある
http://unsolublesugar.com/20160218/134940/
http://unsolublesugar.com/20160221/110755/

youtubeに動画があがったいる
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
テーマ： mineにおけるテスト〜リリース〜リリース後にやっていること
発表者： Masataka Kono

資料：https://www.slideshare.net/masatakakono1/minne-72969795

2013年11月リリース
3人チーム
2週間に１回定期的なリリースする

安定的なリリースをするためのフロー

■開発開始からリリースまで
　スクラムで開発
　１．スプリント計画
　２．実装(Unit test uiテスト)
　3.検証シート作成
 ４．検証
 ５．段階的リリース

■テストCI
テストの種類
・UnitTest
・UITest

Local unit test
	＝＞JVM上で動くテスト
	＝＞Androidのフレームワークに依存するテストモックが必要
instrument test　実機、エミュレータ上で動く


・Unitテストは、LocalUnittestで実行している
	・Roborectricでモック(UIテストも書けるが、難しい)
	・MVPのPの部分のテスト
	・ディープリンクのテスト 
	・sharedpreferenceまわり
・Instrumentテスト
  Espressoテスト
  　＝＞テストを書いてくのはつらい
　　　　　実行時間が長い
　　　＝＞振るまいのテストだけする
・Drone
  ・内部でDckerが作れる
  ＝＞CI周りとUnitTest
  ・Web版もあるがオープンソースのものを利用していた
  　ペポパを支える大統一CI環境と人々
・AWS Device Farm
 　クラウド上で実機を使ったテスト  　
 　apkeをアップして手動テスト

 ・CIのが慣れ
 　githubにプッシュ＝＞DroneでUnitTestを行いGitHubに反映される
 　DeviceFarｍでUIテストをしている
 　UIテストは、webhookの仕組みがないので
 　監視サーバーを立てて、slacｋに通知している
 
 ・Git Frowで開発をしている

・リリース担当を立てている

・リリース担当を事前に決める
[リリース担当がすること]
　・リリース用のissue立てる
　　＝＞今夏のリリースメモ
　・検証シートの作成
　　＝＞他の人が検証するために必要な情報を各
　　googleのスプレッドシートで作っていた
　・検証
　　＝＞検証シートにもとづき実施
　　＝＞Androidエンジニア２人とディレクターも一緒にしている
　　　　※iosエンジニアもテストを実施しているかも
　　　　　OS間で仕様の違いを埋める
　・検証で出たバグを修正する
　　バグが出たら、バグの周辺をサイド検証する

・Google playの段階的リリースをしていた
20%リリース
２営業日後50%or 100%リリース
休日の前日はリリースしない

・クラッシュの監視
Crashlytics
　＝＞Slackと連携してくれる
　＝＞毎朝　リマインダセット　Slackでリマインダをつけれる

・アプリレビューの監視
google -play -review-wathcher
を使うとslacｋにながせる

・レビューの返信対応
CSさんが担当

・振り返り　１時間位で実施している
	・20%リリース後
	・Keep/Good/Problem/tryをしていた

[質問タイム]---------------

質問：不具合が出た場合は、次のスプリントがおかしくなるがどうしてる
回答：不具合を修正してはみ出したものは、次のスプリントにまわしている

質問：CIでDroneを利用したのか
回答：外部のサーバーにソースを置きたくないため、登壇者は選定していない

質問：振り返りにでどんなことを話しているのか？
　　　内容が似てくるのではないか
回答：毎回同じ内容がでてこない

質問：カバレッジをだしているか？
回答：だしていない

質問：CIごとに回すテストはどのくらい
回答：５分から１０分くらい




~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
テーマ：

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
テーマ：

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

